package view;

import database.dao.APTtypeDAO;
import database.dao.AppointmentDAO;
import database.dao.impl.APTtypeDAOImpl;
import database.dao.impl.AppointmentDAOImpl;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.APTType;
import model.Appointment;

public class APTtypesPage extends javax.swing.JFrame {

    // table model for appointment types table
    private DefaultTableModel dtm;

    private List<APTType> aptTypes;
    private List<Appointment> appointments;

    private static APTtypeDAO aptdao = new APTtypeDAOImpl();
    private static AppointmentDAO appointmentDAO = new AppointmentDAOImpl();

    /**
     * Creates new form APTtypesPage
     */
    public APTtypesPage() {
        initComponents();
        this.dtm = (DefaultTableModel) tableAptTypes.getModel();
        this.aptTypes = aptdao.getAllAPTTypes();
        this.appointments = appointmentDAO.getAllAppointments();
        refreshTable();

    }

    // Clear the table
    private void clearTable() {
        dtm.getDataVector().removeAllElements();
        dtm.fireTableDataChanged();
    }

    // Popup data to the table
    private void refreshTable() {
        clearTable();
        // add each loaded types to the table
        for (APTType aptType : aptTypes) {
            String updatedAt = aptType.getUpdatedAt() == null ? "-" : aptType.getUpdatedAt().toString();
            String updatedBy = aptType.getUpdatedBy() == null ? "-" : aptType.getUpdatedBy();
            dtm.addRow(new Object[]{aptType.getDescription(), aptType.getCreatedAt(),
                aptType.getCreatedBy(), updatedAt, updatedBy});
        }
    }

    /**
     * Checks whether there is an appointment for this type USED: lambda
     * expression
     *
     * @param aptt the specified appointment
     * @return true or false
     */
    private boolean hasAppointment(APTType aptt) {
        // USED: lambda
        if (appointments.stream().anyMatch((appointment) -> (appointment.getType().getId() == aptt.getId()))) {
            return true;
        }
        return false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAptTypes = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnHome = new javax.swing.JButton();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                windowClosingActionHandler(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(32, 123, 198));
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Appointment Types");

        tableAptTypes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Description", "Created At", "Created By", "Updated At", "Updated By"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableAptTypes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableAptTypes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableAptTypesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableAptTypes);
        if (tableAptTypes.getColumnModel().getColumnCount() > 0) {
            tableAptTypes.getColumnModel().getColumn(2).setPreferredWidth(50);
            tableAptTypes.getColumnModel().getColumn(4).setPreferredWidth(50);
        }

        jLabel1.setText("Description");

        btnAdd.setText("Add");
        btnAdd.setFocusPainted(false);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setFocusPainted(false);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.setFocusPainted(false);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/home.png"))); // NOI18N
        btnHome.setBorder(null);
        btnHome.setFocusPainted(false);
        btnHome.setOpaque(false);
        btnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHomeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(40, 40, 40)
                                .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(228, 228, 228)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 342, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHomeActionPerformed
        // goto home page
        HomePage.getInstance().navigate();
        this.setVisible(false);
    }//GEN-LAST:event_btnHomeActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        // read the description
        String desc = txtDescription.getText().trim();

        if (desc.isEmpty()) {
            // if the description is empty show an alert
            JOptionPane.showMessageDialog(this, "Please enter the description");
        } else {
            // create new type and insert to the database
            APTType type = new APTType(aptdao.getMaxAPTtypeID() + 1, desc);
            type.setCreatedAt(new Date());
            type.setCreatedBy(HomePage.getInstance().getUser().getName());
            aptTypes.add(type);
            refreshTable();
            aptdao.addAPTtype(type);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        // get the selected row
        int selectedRow = tableAptTypes.getSelectedRow();

        if (selectedRow >= 0) {

            // if there is any selection
            String desc = txtDescription.getText().trim();

            if (desc.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter the description");
                return;
            }

            // get the selected APTType object
            APTType type = aptTypes.get(selectedRow);

            // update the informations
            type.setDescription(desc);
            type.setUpdatedAt(new Date());
            type.setUpdatedBy(HomePage.getInstance().getUser().getName());
            refreshTable();

            // update to the database
            aptdao.updateAPTtype(type);

        } else {
            JOptionPane.showMessageDialog(this, "Please select one type to update");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int selectedRow = tableAptTypes.getSelectedRow();

        if (selectedRow >= 0) {
            APTType type = aptTypes.get(selectedRow);
            if (hasAppointment(type)) {
                JOptionPane.showMessageDialog(this, "Cannot delete, this type is included in an appointment");
                return;
            }
            // delete the type
            aptTypes.remove(selectedRow);
            refreshTable();
            aptdao.deleteAPTtypeById(type.getId());
            // clear the text field
            txtDescription.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Please select one type to delete");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void windowClosingActionHandler(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_windowClosingActionHandler
        this.setVisible(false);
        HomePage.getInstance().navigate();
    }//GEN-LAST:event_windowClosingActionHandler

    private void tableAptTypesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableAptTypesMouseClicked
        int selectedRow = tableAptTypes.getSelectedRow();
        APTType type = aptTypes.get(selectedRow);
        txtDescription.setText(type.getDescription());
    }//GEN-LAST:event_tableAptTypesMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHome;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableAptTypes;
    private javax.swing.JTextField txtDescription;
    // End of variables declaration//GEN-END:variables
}
